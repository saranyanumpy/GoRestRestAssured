	
	<suite name="GoRest API Test Suite" verbose="1" parallel="none">
	
	  <!-- 1️⃣ Create User First -->
	  <test name="01 - Create User">
	    <classes>
	      <class name="com.gorest.tests.users.positive.CreateUserTest"/>
	    </classes>
	  </test>
	
	 //  2️⃣ Posts Workflow (Create, GetById, Update, Patch) all in one class -->
	  <test name="02 - Posts Workflow">
	    <classes>
	      <class name="com.gorest.tests.posts.positive.PostsWorkflowTest"/>
	    </classes>
	  </test>
	  <!-- 🔄 Get All Users -->
	  <test name="03 - Get All Users" parallel="classes">
	    <classes>
	      <class name="com.gorest.tests.users.positive.GetAllUsersTest"/>
	    </classes>
	  </test>
	   <!-- 4️⃣ Get User By ID (validation) -->
	  <test name="04 - Get User By ID">
	    <classes>
	      <class name="com.gorest.tests.users.positive.GetUserByIdTest"/>
	    </classes>
	  </test>
	
	 
	  <!-- 5️⃣ Update User -->
	  <test name="05 - Update User">
	    <classes>
	      <class name="com.gorest.tests.users.positive.UpdateUserTest"/>
	    </classes>
	  </test>
	
	  <!-- 6️⃣ Patch User -->
	  <test name="06 - Patch User">
	    <classes>
	      <class name="com.gorest.tests.users.positive.PatchUserTest"/>
	    </classes>
	  </test>
	
	 <!-- 🔄 Get All Posts -->
	  <test name="07 - Get All Posts" parallel="classes">
	    <classes>
	      <class name="com.gorest.tests.posts.positive.GetAllPostsTest"/>
	    </classes>
	  </test>
	<!-- 3️⃣ COMMENTS MODULE -->
	  <test name="08 - Comments Workflow">
	    <classes>
	      <class name="com.gorest.tests.comments.positive.CommentsWorkflowTest"/>
	    </classes>
	  </test>
	<!-- 🔄 Get All Comments -->
	  <test name="09 - Get All Comments" parallel="classes">
	    <classes>
	      <class name="com.gorest.tests.comments.positive.GetAllCommentsTest"/>
	    </classes>
	  </test>
	  <test name="10 - Delete Comment">
  <classes>
    <class name="com.gorest.tests.delete.positive.DeleteCommentByCommentId"/>
  </classes>
</test>

<test name="11 - Delete Post">
  <classes>
    <class name="com.gorest.tests.delete.positive.DeletePostByPostId"/>
  </classes>
</test>

<test name="12 - Delete User">
  <classes>
    <class name="com.gorest.tests.delete.positive.DeleteUserByUserId"/>
  </classes>
</test>  
	 <test name="13 - Create User with Malformed JSON">
  <classes>
    <class name="com.gorest.tests.users.negative.CreateMalformedUsersTest"/>
  </classes>
</test>

<test name="14 - Create User with Existing JSON">
  <classes>
    <class name="com.gorest.tests.users.negative.CreateExistingUsersTest"/>
  </classes>
</test>

<test name="15 - Create User with Missing Name">
  <classes>
    <class name="com.gorest.tests.users.negative.CreateUserMissingName"/>
  </classes>
  </test>
  
  <test name="16 - Create User with Invalid Email">
  <classes>
    <class name="com.gorest.tests.users.negative.CreateUserMissingName"/>
  </classes>
</test>

<test name="17 - Create User with Invalid Gender">
  <classes>
    <class name="com.gorest.tests.users.negative.CreateInvalidGenderUsersTest"/>
  </classes>
</test>

<test name="18 - Get By User with Invalid Id">
  <classes>
    <class name="com.gorest.tests.users.negative.GetByInvalidUserId"/>
  </classes>
</test>

<test name="19 - Update User with Invalid Email">
  <classes>
    <class name="com.gorest.tests.users.negative.UpdateByInvalidEmail"/>
  </classes>
  </test>
  
  <test name="20 - Update User with Missing field">
  <classes>
    <class name="com.gorest.tests.users.negative.UpdateByMissingField"/>
  </classes>
  </test>
  
  <test name="21 - Patch User with Invalid Email">
  <classes>
    <class name="com.gorest.tests.users.negative.PatchInvalidEmail"/>
  </classes>
  </test>
  
  <test name="22 - Create Posts Malformed JSON">
  <classes>
    <class name="com.gorest.tests.posts.negative.CreatePostMalformedJsonTest"/>
  </classes>
  </test>
  
  <test name="23 - Create Posts Invalid Token">
  <classes>
    <class name="com.gorest.tests.posts.negative.CreatePostInvalidToken"/>
  </classes>
  </test>
 
 <test name="24 - Create Posts Invalid UserId">
  <classes>
    <class name="com.gorest.tests.posts.negative.CreatePostInvalidUserIdTest"/>
  </classes>
  </test>
  
  <test name="25 - Create Posts Missing Field">
  <classes>
    <class name="com.gorest.tests.posts.negative.CreatePostMissingFieldsTest"/>
  </classes>
  </test>
<test name="26 - Get By PostId">
  <classes>
    <class name="com.gorest.tests.posts.negative.GetPostInvalidIdTest"/>
  </classes>
  </test>

   <test name="27 - Patch By Invalid PostId">
  <classes>
    <class name="com.gorest.tests.posts.negative.PatchPostWithInvalidPostIdTest"/>
  </classes>
  </test>
  
   <test name="27 - Update By Missing Field">
  <classes>
    <class name="com.gorest.tests.posts.negative.UpdatePostMissingFieldsTest"/>
  </classes>
  </test>
</suite>
